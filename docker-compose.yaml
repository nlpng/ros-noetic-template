version: '3.8'

# ROS Noetic Template - Docker Compose Configuration
# This compose file demonstrates how to run the ROS template node
# roslaunch automatically starts roscore, so no separate rosmaster service needed

services:
  # Main template node (roslaunch automatically starts roscore)
  template_node:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: ros_template_node
    networks:
      - ros_network
    ports:
      - "11311:11311"  # ROS Master port
      - "8765:8765"    # Foxglove bridge WebSocket port
    environment:
      - ROS_MASTER_URI=http://template_node:11311
      - ROS_HOSTNAME=template_node
    command: >
      bash -c "roslaunch ros_template_node template_node.launch
               node_name:=template_node
               publish_rate:=2.0
               status_rate:=0.5"
    restart: unless-stopped
    volumes:
      # Mount logs directory for debugging
      - ./logs:/catkin_ws/logs
      # Optional: mount source code for development
      # - ./catkin_ws/src:/catkin_ws/src

  # Optional: Foxglove Studio for modern web-based visualization
  # Note: Foxglove bridge is already running in template_node container
  # Access Foxglove Studio at: https://studio.foxglove.dev
  # Connect to: ws://localhost:8765 (or your host IP)
  foxglove_studio:
    image: ghcr.io/foxglove/studio:latest
    container_name: foxglove_studio
    depends_on:
      - template_node
    ports:
      - "8080:8080"  # Foxglove Studio web interface
    environment:
      - FOXGLOVE_WEBSOCKET_URL=ws://template_node:8765
    profiles:
      - studio  # Use with: docker-compose --profile studio up
    restart: unless-stopped

networks:
  ros_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  logs:
    driver: local

# Usage Examples:
# 
# Start the ROS template node with Foxglove bridge:
#   docker-compose up
#
# Start with local Foxglove Studio container:
#   docker-compose --profile studio up
#
# View logs:
#   docker-compose logs -f template_node
#
# Interactive shell in the container:
#   docker-compose exec template_node bash
#
# Test ROS communication manually:
#   docker-compose exec template_node rostopic list
#   docker-compose exec template_node rostopic echo /template_output
#   docker-compose exec template_node rostopic pub -1 /template_input std_msgs/String "data: 'Test message'"
#
# Foxglove Visualization:
# - Access web-based Foxglove Studio at: https://studio.foxglove.dev
# - Connect to WebSocket: ws://localhost:8765
# - Or use local Foxglove Studio container: http://localhost:8080